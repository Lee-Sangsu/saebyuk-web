[{"/Users/leesangsu/문서/GitHub/seabyuk-web/src/index.tsx":"1","/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/Router.tsx":"2","/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/ProfileState.js":"3","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/Main.tsx":"4","/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/App.tsx":"5","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/SelectGenreOfNewBook.tsx":"6","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/InputKeywords.tsx":"7","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/SignUp.tsx":"8","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Imgs/BookCover.tsx":"9","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/SearchResult.tsx":"10","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/BookMakers.tsx":"11","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/BookImgText.tsx":"12","/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/EmptyState.js":"13","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/RegisterNavigator.tsx":"14","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/NewBookKeywords.tsx":"15","/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/GetRandomColor.ts":"16","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/MustTypedInfos.tsx":"17","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/ReqOrRegBook.tsx":"18","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/SearchNewBook.tsx":"19","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/RequestBook.tsx":"20","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/FAQ.tsx":"21","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns.tsx":"22","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/TextInputs.tsx":"23","/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/Navigator.tsx":"24","/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/FlexStyles.tsx":"25","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/BookInfo.tsx":"26","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/Titles.tsx":"27","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/BookInfoOrgs.tsx":"28","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Lines.tsx":"29","/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/TextStyles.tsx":"30","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/ReturnBook.tsx":"31","/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/InitializeState.js":"32","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Imgs/UserProfile.tsx":"33","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Icons.tsx":"34","/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/IsLoggedInState.js":"35","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/MyLibrary.tsx":"36","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/GetBooksInMain.jsx":"37","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/MyLibraryOrgs.tsx":"38","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/LoveCheckBox.jsx":"39","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/KeywordBox.jsx":"40","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/CheckBox.jsx":"41"},{"size":593,"mtime":1613136189768,"results":"42","hashOfConfig":"43"},{"size":1926,"mtime":1613292888927,"results":"44","hashOfConfig":"43"},{"size":282,"mtime":1611581835056,"results":"45","hashOfConfig":"43"},{"size":242,"mtime":1612593222139,"results":"46","hashOfConfig":"43"},{"size":389,"mtime":1612763956265,"results":"47","hashOfConfig":"43"},{"size":3350,"mtime":1613310874937,"results":"48","hashOfConfig":"43"},{"size":2299,"mtime":1613310883503,"results":"49","hashOfConfig":"43"},{"size":2619,"mtime":1613315033238,"results":"50","hashOfConfig":"43"},{"size":532,"mtime":1613287710548,"results":"51","hashOfConfig":"43"},{"size":2466,"mtime":1613295863323,"results":"52","hashOfConfig":"43"},{"size":316,"mtime":1613287716017,"results":"53","hashOfConfig":"43"},{"size":2832,"mtime":1613310939523,"results":"54","hashOfConfig":"43"},{"size":128,"mtime":1611840306858,"results":"55","hashOfConfig":"43"},{"size":764,"mtime":1612200816324,"results":"56","hashOfConfig":"43"},{"size":1277,"mtime":1611906961573,"results":"57","hashOfConfig":"43"},{"size":517,"mtime":1612863106467,"results":"58","hashOfConfig":"43"},{"size":4013,"mtime":1613310890851,"results":"59","hashOfConfig":"43"},{"size":1423,"mtime":1613315038272,"results":"60","hashOfConfig":"43"},{"size":5462,"mtime":1613315016386,"results":"61","hashOfConfig":"43"},{"size":3888,"mtime":1613314991551,"results":"62","hashOfConfig":"43"},{"size":3436,"mtime":1613315005870,"results":"63","hashOfConfig":"43"},{"size":8874,"mtime":1613315299839,"results":"64","hashOfConfig":"43"},{"size":1773,"mtime":1613287729070,"results":"65","hashOfConfig":"43"},{"size":2640,"mtime":1613360561124,"results":"66","hashOfConfig":"43"},{"size":751,"mtime":1612685250403,"results":"67","hashOfConfig":"43"},{"size":759,"mtime":1612433933693,"results":"68","hashOfConfig":"43"},{"size":1081,"mtime":1613216025864,"results":"69","hashOfConfig":"43"},{"size":5738,"mtime":1613360778480,"results":"70","hashOfConfig":"43"},{"size":214,"mtime":1612425808236,"results":"71","hashOfConfig":"43"},{"size":320,"mtime":1612767722207,"results":"72","hashOfConfig":"43"},{"size":4302,"mtime":1613315023241,"results":"73","hashOfConfig":"43"},{"size":133,"mtime":1612763184810,"results":"74","hashOfConfig":"43"},{"size":819,"mtime":1613314980455,"results":"75","hashOfConfig":"43"},{"size":4106,"mtime":1613233914576,"results":"76","hashOfConfig":"43"},{"size":420,"mtime":1613315027941,"results":"77","hashOfConfig":"43"},{"size":5592,"mtime":1613233990324,"results":"78","hashOfConfig":"43"},{"size":3038,"mtime":1613295731906,"results":"79","hashOfConfig":"43"},{"size":4545,"mtime":1613233999541,"results":"80","hashOfConfig":"43"},{"size":2944,"mtime":1613314982599,"results":"81","hashOfConfig":"43"},{"size":1946,"mtime":1613287779531,"results":"82","hashOfConfig":"43"},{"size":552,"mtime":1613284102638,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"15o7zbf",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"/Users/leesangsu/문서/GitHub/seabyuk-web/src/index.tsx",[],["173","174"],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/Router.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/ProfileState.js",[],["175","176"],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/Main.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/App.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/SelectGenreOfNewBook.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/InputKeywords.tsx",["177","178"],"import {AlertTitle} from 'components/atoms/Texts/Titles';\nimport {RegisterBookImgText} from 'components/molecules/BookImgText';\nimport NewBookKeywords from 'components/organisms/NewBookKeywords';\nimport RegisterNavigator from 'components/organisms/RegisterNavigator';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport EmptyState from 'states/EmptyState';\nimport { useSetRecoilState } from 'recoil';\n\n\n\nconst InputKeywords = () => {\n    const locationState = useLocation().state;\n    const item = JSON.parse(JSON.stringify(locationState)).item;\n    // add keywords 때 setKeywords 사용\n    // console.log(item.genre)\n    const [keywords, setKeywords] = React.useState<Array<string>>(['유익한', '감동적인', '영감을 주는']);\n    var keywordChecked = [false, false, false, false];\n    const setEmpty = useSetRecoilState(EmptyState);\n\n    React.useEffect(() => {\n        setEmpty(true);\n    }, []);\n\n    // console.log(item);\n    return (\n        <div style={{\n            display:'flex',\n            flexDirection:'column',\n            justifyContent: 'center',\n            alignItems:'center',\n            width:'100%', height: window.innerHeight\n        }}>\n            <AlertTitle text=\"등록할 도서를 설명하는 키워드를 입력해주세요 ☺️\" />\n            <div style={{\n                display:'flex',\n                flexDirection:'row',\n                justifyContent: 'space-around',\n                alignItems:'center',\n                width:'650px', margin: `${window.innerHeight*0.1}px 0`\n            }}>\n                <RegisterBookImgText item={item} />\n                <NewBookKeywords setEmpty={setEmpty} keywords={keywords} keywordChecked={keywordChecked} />\n            </div>\n            <RegisterNavigator toPrev={{ \n                pathname: `/saebyuk-web/book/register/item?id=${item.id}`, \n                state : {\n                    item:{\n                        ...item\n                    }\n                }\n            }} toNext={{ pathname:`/saebyuk-web/book/register/etc-infos/`, state:{\n                item: {\n                    ...item,\n                    keyword: keywordChecked\n                }\n            }}} isRegister={false} item={item} />\n        </div>\n    )\n};\n\nexport default InputKeywords;","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/SignUp.tsx",["179"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfileState from 'states/ProfileState';\nimport {useRecoilValue} from 'recoil';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { TextInput } from \"components/atoms/TextInputs\";\nimport { SignUpBtn } from \"components/atoms/Btns\";\nimport {  ColumnFlex } from \"styles/FlexStyles\";\nimport { AlertTitle } from \"components/atoms/Texts/Titles\";\n\nconst SignUp = () => {\n    const [gSchoolNickname, setNickname] = React.useState('');\n    const history = useHistory();\n    const profile = useRecoilValue(ProfileState);\n    const [isWritten, setWritten] = React.useState(false);\n\n    React.useEffect(() => {\n        if (gSchoolNickname.length > 1){\n            setWritten(true);\n        } else {\n            setWritten(false);\n        }\n    }, [gSchoolNickname, setWritten])\n    \n    const signUp = () => {\n        // console.log(profile);\n        const kakao_profile_info = profile.kakao_profile;\n        // console.log(kakao_profile_info);\n        // const csrftoken = Cookies.get('csrftoken');\n        axios.post(`${process.env.REACT_APP_BASE_URL}/account/sign-up/kakao/`, {\n          headers:{\n              \"Access-Control-Allow-Origin\": '*',\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n          },\n          data: {\n            kakao_id: profile.kakao_id,\n            g_school_nickname: gSchoolNickname,\n            kakao_nickname: kakao_profile_info.nickname,\n            profile_image: kakao_profile_info.thumbnail_image_url || '',\n            access_token: profile.access_token\n          }\n        })\n        .then((res) => {\n            // console.log(res);\n            window.sessionStorage.setItem('user', gSchoolNickname);\n            window.location.reload();\n            history.push('/saebyuk-web/')\n        })\n        .catch((err) => console.log(err))\n    };\n\n    return (\n        <div style={{\n            ...ColumnFlex, \n            width: '100%',\n            height: '600px',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            paddingTop: '60px'\n        }}>\n            <AlertTitle text=\"회원가입\" />\n            <div style={{...ColumnFlex, alignItems:'center', paddingTop: '80px'}}>\n                <TextInput value={gSchoolNickname} onChange={(e:any) => setNickname(e.target.value)} maxLength={2} placeholder=\"거꾸로캠퍼스에서 사용하는 별명을 입력해주세요.\" />\n                <SignUpBtn isWritten={isWritten} signUp={signUp} />\n            </div>\n        </div>\n    )\n};\n\nexport default SignUp;\n","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Imgs/BookCover.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/SearchResult.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/BookMakers.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/BookImgText.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/EmptyState.js",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/RegisterNavigator.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/NewBookKeywords.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/GetRandomColor.ts",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/MustTypedInfos.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/ReqOrRegBook.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/SearchNewBook.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/RequestBook.tsx",["180"],"import React from 'react';\nimport { SubTitle } from 'components/atoms/Texts/Titles';\nimport {TextInput} from 'components/atoms/TextInputs';\nimport {RequestBookBtn} from 'components/atoms/Btns';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst RequestBook = () => {\n    const userNickName = window.sessionStorage.getItem('user');\n\n    const [bookTitle, setBookTitle] = React.useState<string>('');\n    const [bookAuthor, setBookAuthor] = React.useState<string>('');\n    const [interestedSection, setInterestedSection] = React.useState<string>('');\n    const [etcInfo, setEtcInfo] = React.useState<string>('');\n\n    const requestBook = () => {\n        // const csrftoken = Cookies.get('csrftoken');\n        if(userNickName){\n            if (bookTitle && bookAuthor) {\n                axios.post(`${process.env.REACT_APP_BASE_URL}/book/request/`, {\n                    headers: {\n                        \"Access-Control-Allow-Origin\": '*',\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        // 'X-CSRFToken': csrftoken\n                    },\n                    data: {\n                        g_school_nickname: userNickName,\n                        book_title: bookTitle,\n                        author: bookAuthor,\n                        interest_parts: interestedSection,\n                        others: etcInfo\n                    }\n                }).then((res) => {\n                    window.alert(\"성공적으로 신청되었습니다.\");\n                }).catch((e) => console.error(e))\n            } else {\n                window.alert(\"도서명과 저자를 입력해주세요.\");\n            }\n        } else {\n            window.alert(\"사용자 정보를 찾을 수 없습니다.\");\n        }\n    };\n\n    React.useEffect(() => {\n        if (bookTitle && bookAuthor) {\n            document.getElementById(\"request-btn\")!.style.backgroundColor = 'black';\n            document.getElementById(\"request-btn\")!.style.color = 'white';\n        } else {\n            document.getElementById(\"request-btn\")!.style.backgroundColor = '#DFDFDF';\n            document.getElementById(\"request-btn\")!.style.color = '#C2C3CB';\n        }\n    }, [bookTitle, bookAuthor])\n\n    return (\n        <div style={{\n            display:'flex',\n            height: '80%',\n            width: '50%',\n            marginTop:'10%',\n            flexDirection:'column',\n            justifyContent: 'flex-start',\n            alignItems: 'center'\n        }}>\n            <div style={{\n                display: 'flex',\n                flexDirection:'column',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }}>\n                <h1>신청하기</h1>\n                <h3>{`읽고 싶은 책을 알려주세요! ☺️`}</h3>\n            </div>\n\n            <SubTitle fontSize=\"15px\" margin='10px 0' text=\"도서명*\" />\n            <TextInput value={bookTitle} placeholder='도서명 입력' onChange={(e:any) => setBookTitle(e.target.value)} />\n\n            <SubTitle fontSize=\"15px\" margin='20px 0px 5px 0px' text=\"저자*\" />\n            <TextInput value={bookAuthor} placeholder='저자 입력' onChange={(e:any) => setBookAuthor(e.target.value)} />\n            \n            <SubTitle fontSize=\"15px\" margin='20px 0px 5px 0px' text=\"관심 분야\" />\n            <TextInput value={interestedSection} placeholder='관심 분야 입력' onChange={(e:any) => setInterestedSection(e.target.value)} />\n\n            <SubTitle fontSize=\"15px\" margin='20px 0px 5px 0px' text=\"기타\" />\n            <TextInput value={etcInfo} placeholder='기타 정보 입력' onChange={(e:any) => setEtcInfo(e.target.value)} />\n\n            <RequestBookBtn id=\"request-btn\" text=\"신청\" onClick={requestBook} margin=\"20px 0 0 0\" />\n\n        </div>\n    )\n};\n\nexport default RequestBook;","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/FAQ.tsx",["181"],"import React from 'react';\nimport {SubTitle} from 'components/atoms/Texts/Titles';\nimport {TextInput, TextArea} from 'components/atoms/TextInputs';\nimport {RequestBookBtn} from 'components/atoms/Btns';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst FAQ = () => {\n    const userNickName = window.sessionStorage.getItem('user');\n\n    const [faqTitle, setFAQTitle] = React.useState<string>('');\n    const [faqContent, setFAQContent] = React.useState<string>('');\n    const [pending, setPending] = React.useState<boolean>(false);\n\n\n    const faq = () => {\n        // const csrftoken = Cookies.get('csrftoken');\n        if(userNickName){\n            if (faqTitle && faqContent) {\n                setPending(true);\n                axios.post(`${process.env.REACT_APP_BASE_URL}/book/faq/`, {\n                    headers: {\n                        \"Access-Control-Allow-Origin\": '*',\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        // 'X-CSRFToken': csrftoken\n                    },\n                    data: {\n                        title: `${faqTitle}`,\n                        body: `${faqContent}`\n                    }\n                }).then((res) => {\n                    // console.log(res);\n                    setPending(false);\n                    window.alert(\"문의 내역이 성공적으로 등록되었습니다.\");\n                }).catch((e) => console.error(e))\n            } else {\n                window.alert(\"도서명과 저자를 입력해주세요.\");\n            }\n        } \n        else {\n            window.alert(\"사용자 정보를 찾을 수 없습니다.\");\n        }\n    };\n\n\n    React.useEffect(() => {\n        if (faqTitle && faqContent) {\n            document.getElementById(\"faq-btn\")!.style.backgroundColor = 'black';\n            document.getElementById(\"faq-btn\")!.style.color = 'white';\n        } else {\n            document.getElementById(\"faq-btn\")!.style.backgroundColor = '#DFDFDF';\n            document.getElementById(\"faq-btn\")!.style.color = '#C2C3CB';\n        }\n    }, [faqTitle, faqContent])\n\n    return (\n        <div style={{\n            display:'flex',\n            height: '80%',\n            width: '50%',\n            marginTop:'10%',\n            flexDirection:'column',\n            justifyContent: 'flex-start',\n            alignItems: 'center'\n        }}>\n            <div style={{\n                display: 'flex',\n                flexDirection:'column',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }}>\n                <h1>문의하기</h1>\n                <h3>{`${window.sessionStorage.getItem('user')}님, 무엇을 도와드릴까요? ☺️`}</h3>\n            </div>\n\n            <SubTitle margin='10px 0' text=\"문의 주제*\" />\n            <TextInput value={faqTitle} placeholder='주제 입력' onChange={(e:any) => setFAQTitle(e.target.value)} />\n\n            <SubTitle margin='20px 0px 5px 0px' text=\"문의 내용*\" />\n            {/* textarea로 바꿔야함. */}\n            <TextArea value={faqContent} placeholder='문의 내용 입력' onChange={(e:any) => setFAQContent(e.target.value)} />\n\n            {pending ? <h1>문의 내역을 저장하는 중입니다</h1>: <></>}\n\n            <RequestBookBtn id=\"faq-btn\" text=\"문의\" onClick={faq} margin=\"20px 0 0 0\" />\n\n        </div>\n    )\n};\n\nexport default FAQ;","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns.tsx",["182"],"import { Link, useHistory } from \"react-router-dom\";\nimport React from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport {useSetRecoilState} from 'recoil';\nimport ProfileState from 'states/ProfileState';\nimport { BorRetBtnStyle, loginBtnStyle } from \"styles/FlexStyles\";\nimport InitializeState from 'states/InitializeState';\n\nexport const NextorBackBtn = ({isEmpty, text, to}:any) => {\n    return (\n        <>\n        {isEmpty ? \n        <span style={{\n            width:'70px',\n            height:'40px',\n            backgroundColor:'black',\n            opacity: '0.5' ,\n            cursor: 'not-allowed',\n            color:'white',\n            display:'flex',\n            justifyContent:'center',\n            alignItems:'center',\n            margin: '0 20px',\n            textDecoration:'none',\n            borderRadius:'7px',\n            boxShadow: '3px 2.5px 2px #CBCBCB'\n        }}>{text}</span>\n        : \n        <Link to={to} style={{\n            width:'70px',\n            height:'40px',\n            backgroundColor:'black',\n            opacity: '1',\n            cursor: 'pointer',\n            color:'white',\n            display:'flex',\n            justifyContent:'center',\n            alignItems:'center',\n            margin: '0 20px',\n            textDecoration:'none',\n            borderRadius:'7px',\n            boxShadow: '3px 2.5px 2px #CBCBCB'\n        }}>{text}</Link>}        \n        </>\n    );\n};\n\n\nexport const RegisterNewBookBtn = ({newBook}:any) => {\n    const history = useHistory();\n    // console.log(newBook.genre);\n    const genres = [\"환경\", \"디자인\", \"마케팅\", \"페미니즘\", \"기타\"];\n    const keywords = ['유익한', '감동적인', '영감을 주는'];\n\n    const onClick = () => {\n        if (!newBook.title || !newBook.page || !newBook.subtitle) {\n            window.alert(\"입력 정보가 부족합니다.\");\n            return ;\n        }\n        var newBookGenre = [];\n        var newBookKeywords = [];\n        // newBook\n        for (var i=0; i < genres.length; i++){\n            if(newBook.genre[i] === true) {\n                newBookGenre.push(genres[i]);\n            }\n        }\n        for (var x=0; x < keywords.length; x++){\n            if(newBook.keyword[x] === true) {\n                newBookKeywords.push(keywords[x]);\n            }\n        }\n        \n        // const csrftoken = Cookies.get('csrftoken');\n        axios.post(`${process.env.REACT_APP_BASE_URL}/book/register/new/`, {\n            headers:{\n                \"Access-Control-Allow-Origin\": '*',\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                // 'X-CSRFToken': csrftoken\n            },\n            data: {\n                isbn: newBook.isbn, \n                title: newBook.title,  \n                author: newBook.authors,  \n                thumbnail_image: newBook.thumbnail_image, \n                publisher: newBook.publisher,   \n                page: newBook.page as number,  \n                published_date: newBook.published_date,   \n                keyword: newBookKeywords, \n                genre: newBookGenre, \n                subtitle: newBook.subtitle, \n                description: newBook.description, \n                purchase_link: newBook.purchase_link ? newBook.purchase_link : \"\"\n            }\n        })\n        .then((res) => {\n            // console.log(res);\n            window.alert(\"책이 성공적으로 등록되었습니다!\");\n            history.push('/saebyuk-web/');\n\n            //aler를 주자.\n        })\n        .catch((err) => {\n            if(err.response.status === 400) {\n                window.alert(\"해당 isbn을 가진 책이 이미 등록되어 있습니다.\")\n            }\n            // console.log(err);\n        })    \n    };\n\n    return (\n        <button onClick={onClick} style={{\n            width:'80px',\n            height:'40px',\n            backgroundColor:'black',\n            color:'white',\n            display:'flex',\n            justifyContent:'center',\n            alignItems:'center',\n            margin: '0 20px',\n            textDecoration:'none',\n            borderRadius:'7px',\n            boxShadow: '3px 2.5px 2px #CBCBCB',\n            cursor:'pointer',\n            borderWidth:'0'\n        }}>등록하기</button>\n    );\n};\n\nexport const RequestBookBtn = ({id, margin, text, onClick}:any) => {\n    return (\n        <button id={id} style={{\n            width: '200px',\n            height: '55px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            margin: margin,\n            backgroundColor: 'black',\n            color: 'white',\n            fontSize: '24px',\n            borderWidth: '0',\n            borderRadius: '13px',\n            cursor:'pointer',\n            boxShadow: 'rgb(203 203 203) 2px 2px 4px'\n        }} onClick={onClick}>\n            {text}\n        </button>\n    )\n};\n\ndeclare global {\n    interface Window {\n        Kakao: any;\n    }\n}\n\nexport const SignInBtn = () =>{\n  const history = useHistory();\n  const setProfile = useSetRecoilState(ProfileState);\n  const setInit = useSetRecoilState(InitializeState);\n\n  const signInProcess = () => {\n    // axios.defaults.xsrfCookieName = \"csrftoken\"\n    // axios.defaults.xsrfHeaderName = \"X-CSRFToken\"\n    window.Kakao.Auth.login({\n      scope: 'profile',\n      success: (res:any) => {\n        // console.log('first res:', res)\n        window.Kakao.Auth.setAccessToken(res.access_token);\n  \n        // const csrftoken = Cookies.get('csrftoken');\n        axios.post(`${process.env.REACT_APP_BASE_URL}/account/login/kakao/`, {\n          headers:{\n              \"Access-Control-Allow-Origin\": '*',\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            //   'X-CSRFToken': csrftoken\n          },\n          data: {\n            access_token: res.access_token\n          }\n        })\n        .then((res) => {\n          // setStatus(res.status);\n          if (res.status === 203) {\n            // console.log(res.data);\n            setProfile(res.data); \n            history.push(\"/sign-up\");\n            setInit(true);\n          } else if (res.status === 200) {\n            // console.log(res.data);\n            window.sessionStorage.setItem('user', res.data.user.g_school_nickname);\n            window.sessionStorage.setItem('profile_img', res.data.user.profile_image);\n            window.location.reload();\n            window.alert(\"login completed\");\n          }\n        })\n        // .catch((err) => console.log(err))\n      }, \n      fail: (err:any) => {\n        console.error(err);\n      }\n    });\n  };\n\n  return (\n    <button style={loginBtnStyle} onClick={signInProcess}>로그인</button>\n  );\n};\n\nexport const SignOutBtn = () => {\n    const history = useHistory();\n\n    const onSignOutClick = () => {\n        if (window.Kakao.Auth.getAccessToken()) {\n            window.Kakao.Auth.logout(function() {\n                sessionStorage.clear();\n                history.push('/saebyuk-web/');\n                window.alert(\"Logout Complete\");\n                window.location.reload();\n            });\n        } else {\n            sessionStorage.clear();\n            history.push('/saebyuk-web/');\n            window.alert(\"Logout Complete\");\n            window.location.reload();\n        }\n    };\n    return (\n        <button style={loginBtnStyle} onClick={onSignOutClick}>로그아웃</button>\n    )\n};\nconst returnNothing = ():void => {return ;};\n\nexport const SignUpBtn = ({isWritten, signUp}:any) => {\n    return (\n        <button style={{\n            ...loginBtnStyle,\n            width: '200px',\n            height: '35px',\n            margin: '30px 0',\n            backgroundColor: isWritten? '#333333' : '#DFDFDF',\n            color: isWritten ? 'white' : '#C2C3CB',\n            cursor: isWritten ? 'pointer': 'default',\n            transition: '0.2s ease-in'\n        }} onClick={isWritten ? signUp : returnNothing}>회원가입</button>\n    )\n};\n\nexport const BorrowBookBtn = ({borrowAvailable, onClick}: any) => {\n    return (\n        <button onClick={borrowAvailable ? onClick : returnNothing} style={{\n            ...BorRetBtnStyle,\n            backgroundColor: borrowAvailable? 'black' : '#DFDFDF',\n            color: borrowAvailable ? 'white' : '#C2C3CB',\n            cursor: borrowAvailable ? 'pointer' : 'default'\n        }}>\n            대출하기\n        </button>\n    );\n};\n\nexport const ReturnBookBtn = ({returnBook, checkedBook}:any) => {\n    return(\n        <button style={{\n            ...BorRetBtnStyle,\n            backgroundColor: checkedBook? 'black' : '#DFDFDF',\n            color: checkedBook ? 'white' : '#C2C3CB',\n            cursor: checkedBook ? 'pointer' : 'default',\n            width:'225px'\n        }} onClick={returnBook}>\n            반납하기\n        </button>\n    )\n    \n}","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/TextInputs.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/Navigator.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/FlexStyles.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/BookInfo.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/Titles.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/BookInfoOrgs.tsx",["183"],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Lines.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/TextStyles.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/ReturnBook.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/InitializeState.js",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Imgs/UserProfile.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Icons.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/IsLoggedInState.js",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/MyLibrary.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/GetBooksInMain.jsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/MyLibraryOrgs.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/LoveCheckBox.jsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/KeywordBox.jsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/CheckBox.jsx",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":17,"column":22,"nodeType":"190","messageId":"191","endLine":17,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":23,"column":8,"nodeType":"194","endLine":23,"endColumn":10,"suggestions":"195"},{"ruleId":"188","severity":1,"message":"196","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"196","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"196","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"196","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":15},{"ruleId":"188","severity":1,"message":"196","line":10,"column":8,"nodeType":"190","messageId":"191","endLine":10,"endColumn":15},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/no-unused-vars","'setKeywords' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setEmpty'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'Cookies' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Update the dependencies array to be: [setEmpty]",{"range":"202","text":"203"},[905,907],"[setEmpty]"]