[{"/Users/leesangsu/문서/GitHub/seabyuk-web/src/index.tsx":"1","/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/Router.tsx":"2","/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/ProfileState.js":"3","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/Main.tsx":"4","/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/App.tsx":"5","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/SubTitle.tsx":"6","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/AlertTitle.tsx":"7","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/KeywordBox.tsx":"8","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns/NextorBackBtn.tsx":"9","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/SelectGenreOfNewBook.tsx":"10","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/InputKeywords.tsx":"11","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/GetBooksInMain.tsx":"12","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/SignUp.tsx":"13","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns/SignInBtn.tsx":"14","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Imgs/BookCover.tsx":"15","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/SearchResult.tsx":"16","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/BookTitle.tsx":"17","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/BookMakers.tsx":"18","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/BookImgText.tsx":"19","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns/RegisterNewBookBtn.tsx":"20","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/SearchNewBook.tsx":"21","/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/EmptyState.js":"22","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/RegisterNavigator.tsx":"23","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/NewBookKeywords.tsx":"24","/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/GetRandomColor.ts":"25","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Inputs/TextInput.tsx":"26","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/MustTypedInfos.tsx":"27"},{"size":563,"mtime":1611571462581,"results":"28","hashOfConfig":"29"},{"size":1201,"mtime":1611905791649,"results":"30","hashOfConfig":"29"},{"size":282,"mtime":1611581835056,"results":"31","hashOfConfig":"29"},{"size":423,"mtime":1611824158092,"results":"32","hashOfConfig":"29"},{"size":347,"mtime":1611573604776,"results":"33","hashOfConfig":"29"},{"size":296,"mtime":1611815171360,"results":"34","hashOfConfig":"29"},{"size":232,"mtime":1611815171596,"results":"35","hashOfConfig":"29"},{"size":902,"mtime":1611902849603,"results":"36","hashOfConfig":"29"},{"size":691,"mtime":1611896583488,"results":"37","hashOfConfig":"29"},{"size":3276,"mtime":1611907125377,"results":"38","hashOfConfig":"29"},{"size":2225,"mtime":1611908107392,"results":"39","hashOfConfig":"29"},{"size":850,"mtime":1611823959792,"results":"40","hashOfConfig":"29"},{"size":1674,"mtime":1611824040487,"results":"41","hashOfConfig":"29"},{"size":1807,"mtime":1611824195661,"results":"42","hashOfConfig":"29"},{"size":496,"mtime":1611824524840,"results":"43","hashOfConfig":"29"},{"size":1402,"mtime":1611835447783,"results":"44","hashOfConfig":"29"},{"size":342,"mtime":1611829184491,"results":"45","hashOfConfig":"29"},{"size":295,"mtime":1611825845858,"results":"46","hashOfConfig":"29"},{"size":1158,"mtime":1611837737285,"results":"47","hashOfConfig":"29"},{"size":2258,"mtime":1611909916045,"results":"48","hashOfConfig":"29"},{"size":4725,"mtime":1611905323955,"results":"49","hashOfConfig":"29"},{"size":128,"mtime":1611840306858,"results":"50","hashOfConfig":"29"},{"size":831,"mtime":1611907063062,"results":"51","hashOfConfig":"29"},{"size":1277,"mtime":1611906961573,"results":"52","hashOfConfig":"29"},{"size":217,"mtime":1611902412469,"results":"53","hashOfConfig":"29"},{"size":440,"mtime":1611905210654,"results":"54","hashOfConfig":"29"},{"size":3243,"mtime":1611909918380,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"yx0kbh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/leesangsu/문서/GitHub/seabyuk-web/src/index.tsx",[],["116","117"],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/Router.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/ProfileState.js",[],["118","119"],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/Main.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/route/App.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/SubTitle.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/AlertTitle.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Boxes/KeywordBox.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns/NextorBackBtn.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/SelectGenreOfNewBook.tsx",["120"],"import AlertTitle from 'components/atoms/Texts/AlertTitle';\nimport {KeywordBox} from 'components/atoms/Boxes/KeywordBox';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport BookImgText from 'components/molecules/BookImgText';\nimport RegisterNavigator from 'components/organisms/RegisterNavigator';\nimport EmptyState from 'states/EmptyState';\nimport { useSetRecoilState } from 'recoil';\n\nconst SelectGenreOfNewBook = () => {\n    const genres = [\"환경\", \"디자인\", \"마케팅\", \"페미니즘\", \"기타\"];\n    var genreChecked = [false, false, false, false, false];\n    const locationState = useLocation().state;\n    const item = JSON.parse(JSON.stringify(locationState)).item; // parse 안해주면 locationState.item을 unknown타입으로 인식하는 에러(= \"Object is of type 'unknown\" 에러) 발생.\n    const setEmpty = useSetRecoilState(EmptyState);\n\n    React.useEffect(() => {\n        setEmpty(true);\n    }, []);\n    \n\n    const onKeywordClick = (event:any) => {\n        const genre:string = event.target.value;\n        if (genre === \"환경\") {\n            genreChecked[0] = !genreChecked[0];\n        } else if (genre === \"디자인\") {\n            genreChecked[1] = !genreChecked[1];\n        } else if (genre === \"마케팅\") {\n            genreChecked[2] = !genreChecked[2];\n        } else if (genre === \"페미니즘\") {\n            genreChecked[3] = !genreChecked[3];\n        } else if (genre === \"기타\") {\n            genreChecked[4] = !genreChecked[4];\n        } \n\n        // empty => indexOf() will return -1\n        if(genreChecked.indexOf(true) === -1) {\n            setEmpty(true);\n        } else {\n            setEmpty(false);\n        }\n    };\n\n    return (\n        <div style={{\n            display:'flex',\n            flexDirection:'column',\n            justifyContent: 'center',\n            alignItems:'center',\n            width:'100%', height: window.innerHeight\n        }}>\n            <AlertTitle text=\"등록할 도서의 추천 분야를 선택해주세요 ☺️\" />\n            <div style={{\n                display:'flex',\n                flexDirection:'row',\n                justifyContent: 'space-around',\n                alignItems:'center',\n                width:'650px', margin: `${window.innerHeight*0.1}px 0`\n            }}>\n                <BookImgText item={item} />\n                <div style={{\n                    display:'flex',\n                    flexDirection:'row',\n                    justifyContent:'flex-start',\n                    alignItems:'space-around',\n                    height:'170px',\n                    width:'230px',\n                    flexWrap:'wrap'\n                }}>\n                    {genres.map((value, index) => \n                        <KeywordBox id={`keyword-box${index}`} key={index} keyword={value} onClick={onKeywordClick}  />\n                    )}\n                </div>\n            </div>\n            <RegisterNavigator toPrev=\"/book/register/new\" isRegister={false} item={item} genreChecked={genreChecked} toNext={{ pathname:`/book/register/keyword/`, state:{\n                item: {\n                    ...item,\n                    genre: genreChecked\n                }\n            }}} />\n        </div>\n    )\n};\n\nexport default SelectGenreOfNewBook;","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/InputKeywords.tsx",["121","122"],"import AlertTitle from 'components/atoms/Texts/AlertTitle';\nimport BookImgText from 'components/molecules/BookImgText';\nimport NewBookKeywords from 'components/organisms/NewBookKeywords';\nimport RegisterNavigator from 'components/organisms/RegisterNavigator';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport EmptyState from 'states/EmptyState';\nimport { useSetRecoilState } from 'recoil';\n\n\n\nconst InputKeywords = () => {\n    const locationState = useLocation().state;\n    const item = JSON.parse(JSON.stringify(locationState)).item;\n    // add keywords 때 setKeywords 사용\n    const [keywords, setKeywords] = React.useState<Array<string>>(['유익한', '감동적인', '영감을 주는']);\n    var keywordChecked = [false, false, false, false];\n    const setEmpty = useSetRecoilState(EmptyState);\n\n    React.useEffect(() => {\n        setEmpty(true);\n    }, []);\n\n    console.log(item);\n    return (\n        <div style={{\n            display:'flex',\n            flexDirection:'column',\n            justifyContent: 'center',\n            alignItems:'center',\n            width:'100%', height: window.innerHeight\n        }}>\n            <AlertTitle text=\"등록할 도서를 설명하는 키워드를 입력해주세요 ☺️\" />\n            <div style={{\n                display:'flex',\n                flexDirection:'row',\n                justifyContent: 'space-around',\n                alignItems:'center',\n                width:'650px', margin: `${window.innerHeight*0.1}px 0`\n            }}>\n                <BookImgText item={item} />\n                <NewBookKeywords setEmpty={setEmpty} keywords={keywords} keywordChecked={keywordChecked} />\n            </div>\n            <RegisterNavigator toPrev={{ \n                pathname: `/book/register/item?id=${item.id}`, \n                state : {\n                    item:{\n                        ...item\n                    }\n                }\n            }} toNext={{ pathname:`/book/register/etc-infos/`, state:{\n                item: {\n                    ...item,\n                    keyword: keywordChecked\n                }\n            }}} isRegister={false} item={item} />\n        </div>\n    )\n};\n\nexport default InputKeywords;","/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/GetBooksInMain.tsx",["123"],"import React from 'react';\nimport Cookies from 'js-cookie';\n\nconst GetBooksInMain = () => {\n    const getBooks = () => {\n        const csrftoken = Cookies.get('csrftoken');\n        // newBook\n        fetch(`${process.env.REACT_APP_BASE_URL}/book/main/`, {\n         method: 'GET',\n          headers:{\n            //   \"Access-Control-Allow-Origin\": '*',\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            //   'X-CSRFToken': csrftoken\n          },\n          mode: \"no-cors\"\n        })\n        .then((res) => {\n            console.log(res);\n        })\n        .catch((err) => console.log(err))\n    };\n\n    React.useEffect(( ) => {\n        getBooks();\n    }, [])\n\n    return (\n        <div>\n            <span> 책을 불러오겠다. </span>\n        </div>\n    )\n};\n\nexport default GetBooksInMain;\n","/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/SignUp.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns/SignInBtn.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Imgs/BookCover.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/SearchResult.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/BookTitle.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Texts/BookMakers.tsx",[],["124","125"],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/molecules/BookImgText.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Btns/RegisterNewBookBtn.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/SearchNewBook.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/states/EmptyState.js",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/RegisterNavigator.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/organisms/NewBookKeywords.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/styles/GetRandomColor.ts",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/components/atoms/Inputs/TextInput.tsx",[],"/Users/leesangsu/문서/GitHub/seabyuk-web/src/pages/RegisterBook/MustTypedInfos.tsx",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":19,"column":8,"nodeType":"132","endLine":19,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":16,"column":22,"nodeType":"136","messageId":"137","endLine":16,"endColumn":33},{"ruleId":"130","severity":1,"message":"131","line":22,"column":8,"nodeType":"132","endLine":22,"endColumn":10,"suggestions":"138"},{"ruleId":"134","severity":1,"message":"139","line":6,"column":15,"nodeType":"136","messageId":"137","endLine":6,"endColumn":24},{"ruleId":"126","replacedBy":"140"},{"ruleId":"128","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setEmpty'. Either include it or remove the dependency array.","ArrayExpression",["144"],"@typescript-eslint/no-unused-vars","'setKeywords' is assigned a value but never used.","Identifier","unusedVar",["145"],"'csrftoken' is assigned a value but never used.",["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},"Update the dependencies array to be: [setEmpty]",{"range":"149","text":"150"},{"range":"151","text":"150"},[887,889],"[setEmpty]",[866,868]]